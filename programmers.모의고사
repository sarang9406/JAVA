package study.april27;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Iterator;



public class ArrayListSol {
	/*
	 * 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 
	 * 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.
	 *  
	 * 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ... 
	 * 2번 수포자가 찍는 식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ... 
	 * 3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ... 
	 * 
	 * 1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 
	 * 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록
	 * solution 함수를 작성해주세요.
	 * 
	 */
	
	private int [] answers; 
	private int n;


	public int[] solution(int[] answers) {
		this.answers = answers;
		
		int[] A = new int[answers.length];
		int[] B = new int[answers.length];
		int[] C = new int[answers.length];

		// 1번 수포자가 찍는 방식
		n = 0;
		for (int i = 0; i < A.length; i++) {
			++n;
			if (i != 0 && i % 5 == 0) {
				n -= 5;
			}
			A[i] = n;

		}
//		 System.out.println(Arrays.toString(A));

		// 2번 수포자가 찍는 방식
		n = 1;
		for (int i = 0; i < B.length; i++) {
			if (i % 2 == 0) {
				B[i] = 2;
			} else if (i % 2 != 0) {
				if (n == 2) {
					B[i] = n + 1;
					n++;
				} else {
					B[i] = n;
				}
				n++;
				if ((i + 1) % 8 == 0) {
					n = 1;
				}

			}
		}
//		 System.out.println(Arrays.toString(B));

		// 3번 수포자가 찍는 방식
		for (int i = 0; i < C.length; i++) {
			if (i % 10 == 0 || i % 10 == 1) {
				C[i] = 3;
			}
			if (i % 10 == 2 || i % 10 == 3) {
				C[i] = 1;
			}
			if (i % 10 == 4 || i % 10 == 5) {
				C[i] = 2;
			}
			if (i % 10 == 6 || i % 10 == 7) {
				C[i] = 4;
			}
			if (i % 10 == 8 || i % 10 == 9) {
				C[i] = 5;
			}
		}
//		  System.out.println(Arrays.toString(C));

		// 정답이랑 각 수포자가 찍은 답이랑 비교 후 정답 갯수 카운트
		int a = 0;
		int b = 0;
		int c = 0;
		for (int i = 0; i < answers.length; i++) {
			if (answers[i] == A[i]) {
				a++;
			}
			if (answers[i] == B[i]) {
				b++;
			}
			if (answers[i] == C[i]) {
				c++;
			}
		}
		
		//1,2,3번 수포자가 맞은 갯수들을 토대로 많이 맞은 사람 확인
		ArrayList<Integer> ans = new ArrayList<Integer>();

		if (a >= b && a >= c) {
			ans.add(1);
		}
		if (b >= a && b >= c) {
			ans.add(2);
		}
		if (c >= a && c >= b) {
			ans.add(3);
		}

		//ArrayList로 받은 값을 iterator를 이용해 배열로 변환
		int[] arr = new int[ans.size()];
		Iterator<Integer> iterator = ans.iterator();

		while (iterator.hasNext()) {
			for (int i = 0; i < ans.size(); i++) {
				arr[i] = ans.get(i);
				iterator.next();
			}
		}
		
		//배열로 리턴
		return arr;
	}


	@Override
	public String toString() {
		
		return Arrays.toString(solution(answers));
	
	}
}


=================================================================
package study.april27;

public class MTest {

	public static void main(String[] args) {
		int[] answers = { 1, 2, 3, 4, 5 };
		int [] answers1 = {1, 3, 2, 4, 2};
		int [] answers2 = {1, 2, 4, 1, 2};
		int [] answers3 = {1, 5, 2, 3, 1, 3, 2, 4, 5, 2, 1, 5, 4, 3, 2};
		
		System.out.println("==============");
		ArrayListSol list = new ArrayListSol();
		list.solution(answers);
		System.out.println(list);
		list.solution(answers1);
		System.out.println(list);
		list.solution(answers2);
		System.out.println(list);
		list.solution(answers3);
		System.out.println(list);

	}

}
